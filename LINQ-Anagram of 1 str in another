//Create a function that takes two strings and determines if an anagram of the first string is in the second string. Anagrams of "bag" are "bag", "bga", "abg", "agb", "gab", "gba". Since none of those anagrams are in "grab", the answer is false. A "g", "a", and "b" are in the string "grab", but they're split up by the "r".

//Examples
//AnagramStrStr("car", "race") ➞ true

//AnagramStrStr("nod", "done") ➞ true

//AnagramStrStr("bag", "grab") ➞ false

using System;
using System.Linq;

namespace Practice2
{
    public class tasks
    {
        public bool mysteryFunc(string s1,string s2)
        {
            string haystack = s1.Length > s2.Length ? s1 : s2;
            string needle = haystack.Equals(s1) ? s2 : s1;
            int conditionVal = (haystack.Length == needle.Length) ? 1 : haystack.Length - needle.Length;

            for (int i = 0; i < conditionVal; i++)
            {
                if (needle.All(a => haystack.Substring(i, needle.Length).Contains(a)))
                    return true;
            }
            return false;
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            tasks myTasks = new tasks();
            Console.WriteLine(myTasks.mysteryFunc("nod","done"));            
        }
    }
}
